services:
  app:
    container_name: app-sophys-web-${APP_NAME}
    build:
      context: .
      dockerfile: "apps/${APP_NAME}/Dockerfile"
      args:
        AUTH_SECRET: "${AUTH_SECRET}"
        AUTH_TRUST_HOST: 1
        BLUESKY_HTTPSERVER_URL: "${BLUESKY_HTTPSERVER_URL}"
        NEXT_PUBLIC_BASE_PATH: "${NEXT_PUBLIC_BASE_PATH}"
        NEXT_PUBLIC_PVWS_URL: "${NEXT_PUBLIC_PVWS_URL}"
    environment:
      AUTH_SECRET: "${AUTH_SECRET}"
      AUTH_TRUST_HOST: 1
      BLUESKY_HTTPSERVER_URL: "${BLUESKY_HTTPSERVER_URL}"
      NEXT_PUBLIC_BASE_PATH: "${NEXT_PUBLIC_BASE_PATH}"
      NEXT_PUBLIC_PVWS_URL: "${NEXT_PUBLIC_PVWS_URL}"
    restart: unless-stopped
    expose:
      - "3000"
    labels:
      - coolify.name=app-sophys-web-${APP_NAME}
      - traefik.enable=true
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.app-sophys-web-${APP_NAME}.entryPoints=http
      - traefik.http.routers.app-sophys-web-${APP_NAME}.middlewares=redirect-to-https
      - "traefik.http.routers.app-sophys-web-${APP_NAME}.rule=Host(`tepuiless.lnls.br`) && PathPrefix(`${NEXT_PUBLIC_BASE_PATH}`)"
      - traefik.http.routers.app-sophys-web-${APP_NAME}.tls.certresolver=letsencrypt
      - traefik.http.routers.app-sophys-web-${APP_NAME}.tls=true
      - "caddy_0.handle.0_reverse_proxy={{upstreams}}"
      - "caddy_0.handle=${NEXT_PUBLIC_BASE_PATH}*"
      - caddy_0.header=-Server
      - "caddy_0.try_files={path} /index.html /index.php"
      - "caddy_0=https://tepuiless.lnls.br"
      - caddy_ingress_network=web
    networks:
      web: null
volumes: {}
networks:
  web:
    name: web
    external: true
configs: {}
secrets: {}
